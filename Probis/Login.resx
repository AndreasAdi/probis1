<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eRSCf9GOAAAAAElFTkSuQmCC
</value>
  </data>
</root>